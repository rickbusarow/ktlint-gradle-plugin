name: Set Gradle Args for runner OS
description: Sets gradle property and jvm arguments based on runner OS

outputs:
  gradle-property-args:
    description: "ex: -Dfile.encoding=UTF-8"
    value: ${{ steps.set-args.outputs.gradle-property-args }}
  gradle-jvm-args:
    description: "ex: -Xmx5g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError"
    value: ${{ steps.set-args.outputs.gradle-jvm-args }}

runs:
  using: composite
  steps:
    - id: set-args
      shell: bash
      run: |
        runnerOS=$RUNNER_OS
        runnerName=$RUNNER_NAME

        env

        # Set common JVM arguments
        jvmArgs="-XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

        case $runnerName in
          ubuntu-4-16)
            jvmArgs="-Xmx13g -XX:MaxMetaspaceSize=5g $jvmArgs"
            ;;
          ubuntu-8-32)
            jvmArgs="-Xmx28g -XX:MaxMetaspaceSize=5g $jvmArgs"
            ;;
          windows-8-32)
            jvmArgs="-Xmx28g -XX:MaxMetaspaceSize=5g $jvmArgs"
            ;;
          macos-latest)
            jvmArgs="-Xmx10g -XX:MaxMetaspaceSize=5g $jvmArgs"
            ;;
          ubuntu-latest)
            jvmArgs="-Xmx4g -XX:MaxMetaspaceSize=3g $jvmArgs"
            ;;
          windows-latest)
            jvmArgs="-Xmx3g -XX:MaxMetaspaceSize=756m $jvmArgs"
            ;;
          *)
            echo "Unsupported runner name: $runnerName"
            exit 1
            ;;
        esac

        propertyArgs="-Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false"

        echo "gradle-property-args=$propertyArgs" >> $GITHUB_OUTPUT
        echo "gradle-jvm-args=$jvmArgs" >> $GITHUB_OUTPUT
